/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 20:09:47 GMT 2023
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Menu_ESTest extends Menu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Menu.erros(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      // Undeclared exception!
      try { 
        Menu.MenuListaX(linkedList0, 0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Casa casa0 = new Casa();
      LinkedList<Faturas> linkedList0 = new LinkedList<Faturas>();
      Faturas faturas0 = new Faturas(0.0, "+Fb{);NuQ/(@|;|<2A", (String) null, 0.0);
      linkedList0.add(faturas0);
      casa0.setFatura(linkedList0);
      // Undeclared exception!
      try { 
        Menu.faturaList(casa0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      Casa casa0 = new Casa("9", "P~KHgD", (Fornecedores) null);
      linkedList0.add(casa0);
      // Undeclared exception!
      try { 
        Menu.MenuListaCasas(linkedList0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      int int0 = Menu.menuFornecedores();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("UEexHs6");
      int int0 = Menu.MenuEstado();
      assertEquals((-1), int0);
      
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      SystemInUtil.addInputLine("8 Data Final: ");
      int int1 = Menu.MenuListaX(linkedList0, (-284));
      assertEquals(8, int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      SystemInUtil.addInputLine("9");
      int int0 = Menu.MenuListaCasas(linkedList0);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SystemInUtil.addInputLine("70");
      int int0 = Menu.MenuInicial();
      assertEquals(70, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemInUtil.addInputLine("5");
      int int0 = Menu.MenuEstado();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("9");
      int int0 = Menu.MenuCasa();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemInUtil.addInputLine("6");
      int int0 = Menu.EscolhaDispotivios();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      SystemInUtil.addInputLine("P~gD");
      Menu.MenuListaCasas(linkedList0);
      // Undeclared exception!
      try { 
        Menu.menuSimulacao();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Menu.menuFornecedores();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Menu.faturaList((Casa) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        Menu.MenuListaX((List<Casa>) null, 19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        Menu.MenuListaCasas((List<Casa>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Menu.MenuEstado();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      FornecEDP fornecEDP0 = new FornecEDP(0);
      Casa casa0 = new Casa("V-Qf1}N-6,", "", fornecEDP0);
      linkedList0.offer(casa0);
      // Undeclared exception!
      try { 
        Menu.MenuCasaInfo(0, linkedList0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      Casa casa0 = new Casa("`mirU", "`mirU", (Fornecedores) null);
      linkedList0.add(casa0);
      // Undeclared exception!
      try { 
        Menu.MenuCasaInfo(0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Casa", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      // Undeclared exception!
      try { 
        Menu.MenuCasaInfo(1, linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Casa casa0 = new Casa();
      SystemInUtil.addInputLine("2");
      Menu.faturaList(casa0);
      // Undeclared exception!
      try { 
        Menu.MenuCasa();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<Faturas> linkedList0 = new LinkedList<Faturas>();
      Faturas faturas0 = new Faturas();
      linkedList0.add(faturas0);
      // Undeclared exception!
      try { 
        Menu.FaturaInfo(0, linkedList0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Menu.FaturaInfo(4726, (List<Faturas>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<Faturas> linkedList0 = new LinkedList<Faturas>();
      // Undeclared exception!
      try { 
        Menu.FaturaInfo((-1868), linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1868, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      FornecJomar fornecJomar0 = new FornecJomar((-3670));
      Casa casa0 = new Casa(hashMap0, (Map<String, HashSet<String>>) null, "\u001B[1m", "\u001B[1m", fornecJomar0);
      List<Faturas> list0 = casa0.getFatura();
      // Undeclared exception!
      try { 
        Menu.FaturaInfo((-3670), list0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Menu.EscolhaDispotivios();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Menu.erros(35);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Menu.erros(32);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Menu.erros(31);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Menu.erros(28);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Menu.erros(27);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Menu.erros(21);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Menu.erros(19);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Menu.erros(18);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Menu.erros(13);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Menu.erros(6);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Menu.erros(4);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Menu.erros(2);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Menu.clearWindow();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Menu.erros(39);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Menu.erros(38);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Menu.erros(37);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Menu.erros(36);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Menu.erros(34);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Menu.erros(33);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Menu.erros(30);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Menu.erros(29);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Menu.erros(26);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Menu.erros(25);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Menu.erros(24);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Menu.erros(23);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Menu.erros(22);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Menu.erros(20);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Menu.erros(17);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Menu.erros(16);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Menu.erros(15);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Menu.erros(14);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Menu.erros(12);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Menu.erros(11);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Menu.erros(10);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Menu.erros(9);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Menu.erros(8);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Menu.erros(7);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Menu.erros(5);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Menu.erros(3);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Menu.erros(1);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      SystemInUtil.addInputLine("0");
      int int0 = Menu.MenuListaX(linkedList0, 4827);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      SystemInUtil.addInputLine("***** N\u00E3o foi poss\u00EDvel ligar/desligar todos os dispositivos da divis\u00E3o *****");
      int int0 = Menu.MenuListaX(linkedList0, (-284));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      HashMap<String, SmartDevice> hashMap0 = new HashMap<String, SmartDevice>();
      HashMap<String, HashSet<String>> hashMap1 = new HashMap<String, HashSet<String>>();
      FornecJomar fornecJomar0 = new FornecJomar();
      Casa casa0 = new Casa(hashMap0, hashMap1, "0", "", fornecJomar0);
      linkedList0.add(casa0);
      // Undeclared exception!
      try { 
        Menu.MenuListaX(linkedList0, 4827);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      int int0 = Menu.MenuEstatistica();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SystemInUtil.addInputLine("})");
      int int0 = Menu.MenuEstatistica();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SystemInUtil.addInputLine("\nImposto= ");
      LinkedList<Faturas> linkedList0 = new LinkedList<Faturas>();
      Faturas faturas0 = new Faturas();
      linkedList0.add(faturas0);
      int int0 = Menu.FaturaInfo(0, linkedList0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Casa casa0 = new Casa();
      SystemInUtil.addInputLine("0");
      Menu.faturaList(casa0);
      // Undeclared exception!
      try { 
        Menu.MenuEstatistica();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SystemInUtil.addInputLine(" \u001B[1m 0) \u001B[0m Voltar atr\u00E1s\n");
      Casa casa0 = new Casa();
      int int0 = Menu.faturaList(casa0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      int int0 = Menu.menuSimulacao();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SystemInUtil.addInputLine(" \u001B[1m 0) \u001B[0m Voltar atr\u00E1s\n");
      int int0 = Menu.menuSimulacao();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      int int0 = Menu.MenuEstado();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SystemInUtil.addInputLine("7");
      int int0 = Menu.menuFornecedores();
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      SystemInUtil.addInputLine("WR|#F");
      Menu.menuFornecedores();
      // Undeclared exception!
      try { 
        Menu.MenuInicial();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      int int0 = Menu.EscolhaDispotivios();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SystemInUtil.addInputLine("z;R;a^_,");
      int int0 = Menu.EscolhaDispotivios();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      FornecEndesa fornecEndesa0 = new FornecEndesa();
      Casa casa0 = new Casa("FRsSXGi>Z~W.<", "FRsSXGi>Z~W.<", fornecEndesa0);
      linkedList0.add(casa0);
      int int0 = Menu.MenuCasaInfo(0, linkedList0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SystemInUtil.addInputLine("wwmDSF^+#uD#2oLA");
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      FornecEndesa fornecEndesa0 = new FornecEndesa();
      Casa casa0 = new Casa("FRsSXGi>Z~W.<", "FRsSXGi>Z~W.<", fornecEndesa0);
      linkedList0.add(casa0);
      int int0 = Menu.MenuCasaInfo(0, linkedList0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      LinkedList<Casa> linkedList0 = new LinkedList<Casa>();
      int int0 = Menu.MenuListaCasas(linkedList0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      int int0 = Menu.MenuCasa();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      SystemInUtil.addInputLine("Bn|`5=ZfKV+$-6");
      int int0 = Menu.MenuCasa();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      int int0 = Menu.MenuInicial();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      SystemInUtil.addInputLine(";Rlq_,");
      int int0 = Menu.MenuInicial();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Menu menu0 = new Menu();
  }
}
